// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VizsgaremekApp.Models;

#nullable disable

namespace tempbackend.Migrations
{
    [DbContext(typeof(VizsgaremekContext))]
    [Migration("20250425093930_ini")]
    partial class ini
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CVFileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdCardFileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QualificationFileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Budapest, Fő utca 1",
                            ApplicationDate = new DateTime(2025, 1, 25, 9, 39, 30, 324, DateTimeKind.Utc).AddTicks(372),
                            CVFileName = "/uploads/cvs/default.pdf",
                            Email = "gergely@loter.hu",
                            HireDate = new DateTime(2025, 2, 25, 9, 39, 30, 324, DateTimeKind.Utc).AddTicks(379),
                            IdCardFileName = "/uploads/idcards/default.jpg",
                            IsActive = true,
                            Name = "Nagy Gergely",
                            Password = "test123",
                            Phone = "+36301234567",
                            QualificationFileName = "/uploads/qualifications/default.pdf",
                            Status = 3
                        },
                        new
                        {
                            Id = 2,
                            Address = "Debrecen, Piac utca 5",
                            ApplicationDate = new DateTime(2025, 3, 25, 9, 39, 30, 324, DateTimeKind.Utc).AddTicks(384),
                            CVFileName = "/uploads/cvs/default.docx",
                            Email = "akos@loter.hu",
                            HireDate = new DateTime(2025, 4, 10, 9, 39, 30, 324, DateTimeKind.Utc).AddTicks(385),
                            IdCardFileName = "/uploads/idcards/default.jpg",
                            IsActive = true,
                            Name = "Kovács Ákos",
                            Password = "test321",
                            Phone = "+36209876543",
                            QualificationFileName = "/uploads/qualifications/default.pdf",
                            Status = 3
                        });
                });

            modelBuilder.Entity("VizsgaremekApp.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("PackageId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("VizsgaremekApp.Models.InstructorStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("InstructorStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Hired"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Rejected"
                        },
                        new
                        {
                            Id = 5,
                            Type = "OnLeave"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Terminated"
                        });
                });

            modelBuilder.Entity("VizsgaremekApp.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Különleges Alakulat",
                            Price = 45000
                        },
                        new
                        {
                            Id = 2,
                            Name = "Orosz",
                            Price = 25500
                        },
                        new
                        {
                            Id = 3,
                            Name = "Magyar",
                            Price = 30000
                        },
                        new
                        {
                            Id = 4,
                            Name = "9mm-es pisztoly",
                            Price = 20000
                        },
                        new
                        {
                            Id = 5,
                            Name = "9mm-es géppisztoly",
                            Price = 40000
                        },
                        new
                        {
                            Id = 6,
                            Name = "5.56 NATO és .300 blackout",
                            Price = 75000
                        },
                        new
                        {
                            Id = 7,
                            Name = "7.62-es",
                            Price = 45000
                        });
                });

            modelBuilder.Entity("VizsgaremekApp.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("VizsgaremekApp.Models.Appointment", b =>
                {
                    b.HasOne("Instructor", "Instructor")
                        .WithMany("Appointments")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VizsgaremekApp.Models.Package", "Package")
                        .WithMany("Appointments")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Instructor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("VizsgaremekApp.Models.Package", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
